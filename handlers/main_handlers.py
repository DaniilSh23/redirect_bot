import datetime
import random

from loguru import logger
from pyrogram import Client, filters
from pyrogram.types import CallbackQuery, Message


from filters.main_filters import filter_throttling_middleware, filter_for_cancel_and_clear_state, \
    filter_back_to_head_page
from keyboards.bot_keyboards import ADMIN_KBRD, HEAD_PAGE_KBRD
from secondary_functions.req_to_bot_api import post_user_data, get_settings
from settings.config import BLACK_LIST, STATES_STORAGE_DCT


@Client.on_message(filter_throttling_middleware)
async def throttling_middleware_message(client, update):
    """
    –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è throttling middleware.
    –ï—Å–ª–∏ —é–∑–µ—Ä–∞ –Ω–µ—Ç –≤ —á—ë—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ, —Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–º—É —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ–≥–¥–∞ –∏—Å—Ç–µ–∫–∞–µ—Ç –ø–∞—É–∑–∞.
    –ï—Å–ª–∏ —é–∑–µ—Ä —É–∂–µ –µ—Å—Ç—å –≤ —á–µ—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ, —Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ –æ—Ç–≤–µ—á–∞–µ–º.
    """
    logger.info(f'–°—Ä–∞–±–æ—Ç–∞–ª THROTTLING MIDDLEWARE –Ω–∞ —é–∑–µ—Ä–∞ {update.from_user.id}. Message')
    if update.from_user.id not in BLACK_LIST.keys():  # –ï—Å–ª–∏ —é–∑–µ—Ä–∞ –Ω–µ—Ç –≤ —á—ë—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ
        # –°—Ç–∞–≤–∏–º –µ–º—É –≤—Ä–µ–º—è, –∫–æ–≥–¥–∞ –∏—Å—Ç–µ–∫–∞–µ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞
        block_time = random.randint(3, 8)
        BLACK_LIST[update.from_user.id] = datetime.datetime.now() + datetime.timedelta(seconds=block_time)
        await client.send_message(chat_id=update.from_user.id,
                                  text=f'–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ {block_time} —Å–µ–∫.')


@Client.on_callback_query(filter_throttling_middleware)
async def throttling_middleware_callback(client, update):
    """
    –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è throttling middleware.
    –ï—Å–ª–∏ —é–∑–µ—Ä–∞ –Ω–µ—Ç –≤ —á—ë—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ, —Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–º—É —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ–≥–¥–∞ –∏—Å—Ç–µ–∫–∞–µ—Ç –ø–∞—É–∑–∞.
    –ï—Å–ª–∏ —é–∑–µ—Ä —É–∂–µ –µ—Å—Ç—å –≤ —á–µ—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ, —Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ –æ—Ç–≤–µ—á–∞–µ–º.
    """
    logger.info(f'–°—Ä–∞–±–æ—Ç–∞–ª THROTTLING MIDDLEWARE –Ω–∞ —é–∑–µ—Ä–∞ {update.from_user.id}. Callback')
    if update.from_user.id not in BLACK_LIST.keys():  # –ï—Å–ª–∏ —é–∑–µ—Ä–∞ –Ω–µ—Ç –≤ —á—ë—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ
        # –°—Ç–∞–≤–∏–º –µ–º—É –≤—Ä–µ–º—è, –∫–æ–≥–¥–∞ –∏—Å—Ç–µ–∫–∞–µ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞
        block_time = random.randint(3, 8)
        BLACK_LIST[update.from_user.id] = datetime.datetime.now() + datetime.timedelta(seconds=block_time)
        await client.send_message(chat_id=update.from_user.id,
                                  text=f'–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ {block_time} —Å–µ–∫.')


@Client.on_message(filters.command(['start']))
async def start_handler(client, update: Message):
    """START. –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ + –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""

    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ –±—ã–ª–æ
    if STATES_STORAGE_DCT.get(update.from_user.id):
        STATES_STORAGE_DCT.pop(update.from_user.id)

    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏–Ω—Ñ—É –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ –ë–î
    user_data = {
        "tlg_id": update.from_user.id,
        "is_verified": update.from_user.is_verified,
        "is_scam": update.from_user.is_scam,
        "is_fake": update.from_user.is_fake,
        "is_premium": update.from_user.is_premium,
        "first_name": update.from_user.first_name,
        "last_name": update.from_user.last_name,
        "username": update.from_user.username,
        "language_code": update.from_user.language_code,
    }
    await post_user_data(user_data=user_data)

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤ –±–æ—Ç–∞
    bot_admins = await get_settings(key='redirect_bot_admin')
    if bot_admins:
        for i_bot_admin in bot_admins:
            if i_bot_admin.get('value') == str(update.from_user.id):
                # –§–æ—Ä–º–∏—Ä—É–µ–º –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ –∞–¥–º–∏–Ω—É
                for i_name in [update.from_user.first_name, update.from_user.username]:
                    if i_name:
                        admin_name = i_name
                        break
                else:
                    admin_name = f'–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {update.from_user.id}'
                await update.reply_text(
                    text=f'üéâüéâüéâ\n\nüôá‚Äç‚ôÇÔ∏è–†–∞–¥ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –í–∞—Å, üëë<b>{admin_name}</b> !\n\n'
                         f'–î–ª—è –í–∞—Å –¥–æ—Å—Ç—É–ø–Ω–∞ <b>–∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å</b> –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µüñ±\n\n'
                         f'<b>–î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:</b>\n'
                         f'–õ–æ–≥–∏–Ω: <code>admin</code> | –ü–∞—Ä–æ–ª—å: <code>Red!rectB0t@dmin123</code>',
                    reply_markup=ADMIN_KBRD,
                )
                break

    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ç–∞—Ä–∏—Ñ –±–æ—Ç–∞ –Ω–∞ —Ä–µ–¥–∏—Ä–µ–∫—Ç—ã
    response = await get_settings(key='tariff')

    # –î–∞—ë–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await update.reply_text(
        text='ü§ù–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ.\nüéÅ–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç <b>–æ–±–µ—Ä–Ω—É—Ç—å –í–∞—à–∏ —Å—Å—ã–ª–∫–∏</b> –¥–ª—è —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞.\n\n'
             f'ü™ô<b>–°—Ç–æ–∏–º–æ—Å—Ç—å</b> –æ–¥–Ω–æ–≥–æ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞ –¥–ª—è —Å—Å—ã–ª–∫–∏: <b>{response[0].get("value")} —Ä—É–±.</b>\n\n'
             '–ù–∞–∂–∏–º–∞–π—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É <b>üîó–°–û–ó–î–ê–¢–¨ –°–°–´–õ–ö–£</b> –∏ –ø—Ä–∏—Å—Ç—É–ø–∏–º.',
        reply_markup=HEAD_PAGE_KBRD
    )


@Client.on_callback_query(filter_for_cancel_and_clear_state)
async def cancel_and_clear_state_handler(client, update: CallbackQuery):
    """
    –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫—É '–û—Ç–º–µ–Ω–∏—Ç—å' (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –±–æ—Ç–æ–º —Ñ–∞–π–ª–∞ —Å–æ —Å—Å—ã–ª–∫–∞–º–∏).
    –¢–∞–∫–∂–µ –æ—á–∏—â–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —é–∑–µ—Ä–∞
    """

    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ –±—ã–ª–æ
    if STATES_STORAGE_DCT.get(update.from_user.id):
        STATES_STORAGE_DCT.pop(update.from_user.id)

    await update.answer(
        text=f'–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ ‚ùå–û—Ç–º–µ–Ω–∏—Ç—å.\n–í–æ–∑–≤—Ä–∞—Ç –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é.',
        show_alert=True
    )
    await update.edit_message_text(
        text='<b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>',
        reply_markup=HEAD_PAGE_KBRD
    )


@Client.on_callback_query(filter_back_to_head_page)
async def back_to_head_page_handler(client, update: CallbackQuery):
    """
    –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –ù–∞ –≥–ª–∞–≤–Ω—É—é.
    """
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ –±—ã–ª–æ
    if STATES_STORAGE_DCT.get(update.from_user.id):
        STATES_STORAGE_DCT.pop(update.from_user.id)

    await update.answer(
        text=f'–í–æ–∑–≤—Ä–∞—Ç –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é.',
        show_alert=True
    )
    await update.edit_message_text(
        text='<b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>',
        reply_markup=HEAD_PAGE_KBRD
    )


@Client.on_message(filters.command(['menu']))
async def send_menu(client, update: Message):
    """
    –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /menu. –ü—Ä–∏—Å—ã–ª–∞–µ—Ç –º–µ–Ω—é.
    """
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ –±—ã–ª–æ
    if STATES_STORAGE_DCT.get(update.from_user.id):
        STATES_STORAGE_DCT.pop(update.from_user.id)

    await update.reply_text(
        text='<b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>',
        reply_markup=HEAD_PAGE_KBRD
    )
