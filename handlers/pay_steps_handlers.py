from pyrogram import Client
from pyrogram.types import CallbackQuery, Message

from bot_objects.payments_objects import UserPayments
from filters.payment_filters import filters_choose_pay_method, filter_ask_pay_amount, filter_write_pay_amount, \
    confirm_payment_filter, cancel_payment_filter, pay_to_card_send_data_filter, ask_pay_to_card_confirmation_filter, \
    pay_to_card_confirmation_filter, decline_card_payment_filter, ask_amount_for_confirm_card_payment_filter, \
    confirm_card_payment_filter
from keyboards.bot_keyboards import (ADMIN_KBRD, card_payment_processing_kbrd, back_to_headpage_keyboard,
                                     waiting_for_payment_keyboard, pay_methods_keyboard,
                                     cancel_and_clear_state_keyboard, pay_to_card_keyboard)
from resources.messages import MESSAGES
from secondary_functions.req_to_bot_api import req_for_get_payment, get_settings, post_for_change_balance, \
    get_interface_language
from settings.config import PAYMENTS_OBJ_DCT, STATES_STORAGE_DCT, TEMP_STORAGE_DCT, MY_LOGGER


@Client.on_callback_query(filters_choose_pay_method)
async def choose_pay_method_handler(client, update: CallbackQuery):
    """
    –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã.
    """
    # –ü–æ–ª—É—á–∞–µ–º —è–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    interface_lang_response = await get_interface_language(tlg_id=update.from_user.id)
    if not interface_lang_response:
        return await update.edit_message_text(text="üõ† Sorry...The bot has problems with translation. Please try"
                                                   " again later, we are already solving this problem")
    language_code = interface_lang_response["language_code"]

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤ –ë–î –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å—á—ë—Ç–∞
    payment_from_db = await req_for_get_payment(tlg_id=update.from_user.id)
    if not payment_from_db:  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ —Å–ª—É—á–∞–π –Ω–µ—É–¥–∞—á–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
        await update.edit_message_text(
            text=f'üöß<b>–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ–± –∞–∫—Ç–∏–≤–Ω–æ–º –ø–ª–∞—Ç–µ–∂–µ.</b>\n\n'
                 f'–ë—É–¥–µ–º –±–ª–∞–≥–æ–¥–∞—Ä–Ω—ã, –µ—Å–ª–∏ —Å–æ–æ–±—â–∏—Ç–µ –Ω–∞–º –æ–± —ç—Ç–æ–π –ø—Ä–æ–±–ª–µ–º–µ. –¢–∞–∫ –º—ã —Å–º–æ–∂–µ–º –±—ã—Å—Ç—Ä–µ–µ –≤—Å—ë –ø–æ—á–∏–Ω–∏—Ç—å',
            reply_markup=await back_to_headpage_keyboard(language_code)
        )
        return

    # –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –æ –ø–ª–∞—Ç–µ–∂–µ –µ—Å—Ç—å –≤ –ë–î
    if payment_from_db != 404 and payment_from_db.get('tlg_id'):
        payment_obj = UserPayments(  # –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ UserPayments
            tlg_id=update.from_user.id,
            pay_system_type=payment_from_db.get("pay_system_type"),
            amount=payment_from_db.get("amount"),
            bill_id=payment_from_db.get("bill_id"),
            bill_url=payment_from_db.get("bill_url"),
            bill_status=payment_from_db.get("bill_status"),
            bill_expire_at=payment_from_db.get("bill_expire_at"),
        )
        PAYMENTS_OBJ_DCT[update.from_user.id] = payment_obj
        # –î–∞—ë–º –æ—Ç–≤–µ—Ç —Å–æ —Å—Å—ã–ª–∫–æ–π –Ω–∞ –æ–ø–ª–∞—Ç—É –∏ –∫–Ω–æ–ø–∫–∞–º–∏
        await update.edit_message_text(
            text=f'üåê<b>–í–∞—à–∞ —Å—Å—ã–ª–∫–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã:</b> {payment_obj.bill_url}\n\n'
                 f'‚òùÔ∏è<b>–ë—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã</b> - –∫–æ–≥–¥–∞ –≤ Crystal Pay –±—É–¥–µ—Ç "‚úÖ<u>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ</u>" - –Ω—É–∂–Ω–æ –Ω–∞–∂–∞—Ç—å –Ω–∞ '
                 f'–∫–Ω–æ–ø–∫—É "‚úÖ<u>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É</u>" - <b><u>—ç—Ç–æ –±—É–¥–µ—Ç –æ—Å–Ω–æ–≤–∞–Ω–∏–µ–º –¥–ª—è –∑–∞—á–∏—Å–ª–µ–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤.</u></b>',
            reply_markup=await waiting_for_payment_keyboard(language_code)
        )

    else:  # –ï—Å–ª–∏ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å—á—ë—Ç–∞ –Ω–µ—Ç, —Ç–æ –≤–µ–¥—ë–º –Ω–∞ 1-–π —à–∞–≥ –æ–ø–ª–∞—Ç—ã
        await update.answer(f'–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã')
        await update.edit_message_text(
            text=f'üåï <b>–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—É:</b>\n- –ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—É (–†–£–ë.) —Å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç–∞\n\n'
                 f'‚ùóÔ∏è<b>–ü–ª–∞—Ç–µ–∂ –∑–∞—á–∏—Å–ª—è–µ—Ç—Å—è –≤ —Ä—É—á–Ω–æ–º —Ä–µ–∂–∏–º–µ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π</b>\n‚ÄºÔ∏è<b>–û–ø–ª–∞—Ç–∞ –≤ –ª—é–±–æ–º —Ä–∞–∑–º–µ—Ä–µ –≤ –†–£–ë.</b>',
            reply_markup=await pay_methods_keyboard(language_code)
        )


'''–ü–õ–ê–¢–ï–ñ–ò QIWI –∏ CRYSTAL PAY'''


@Client.on_callback_query(filter_ask_pay_amount)
async def ask_pay_amount_handler(client, update: CallbackQuery):
    """
    –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ —Å—É–º–º—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è.
    """
    # –ü–æ–ª—É—á–∞–µ–º —è–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    interface_lang_response = await get_interface_language(tlg_id=update.from_user.id)
    if not interface_lang_response:
        return await update.edit_message_text(text="üõ† Sorry...The bot has problems with translation. Please try"
                                                   " again later, we are already solving this problem")
    language_code = interface_lang_response["language_code"]

    # –î–∞—ë–º –æ—Ç–≤–µ—Ç
    await update.answer(f'–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è')
    await update.edit_message_text(
        text=f'üëá<b>–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞</b>\n\n'
             f'<i>–≠—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ (—Ä—É–±–ª–∏)</i>',
        reply_markup=await cancel_and_clear_state_keyboard(language_code)
    )

    # –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ UserPayments –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ –≤ —Å–ª–æ–≤–∞—Ä—å
    PAYMENTS_OBJ_DCT[update.from_user.id] = UserPayments(
        tlg_id=update.from_user.id,
        pay_system_type=update.data.split()[1]
    )
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç—ç–π—Ç –¥–ª—è –≤–≤–æ–¥–∞ —Å—É–º–º—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
    STATES_STORAGE_DCT[update.from_user.id] = 'send_amount_for_replenish_balance'


@Client.on_message(filter_write_pay_amount)
async def write_pay_amount_handler(client, update: Message):
    """
    –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Å—É–º–º–æ–π –æ–ø–ª–∞—Ç—ã
    """
    # –ü–æ–ª—É—á–∞–µ–º —è–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    interface_lang_response = await get_interface_language(tlg_id=update.from_user.id)
    if not interface_lang_response:
        return await update.reply_text(text="üõ† Sorry...The bot has problems with translation. Please try"
                                            " again later, we are already solving this problem")
    language_code = interface_lang_response["language_code"]

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–≤–µ—Ä–Ω–æ–≥–æ –≤–≤–æ–¥–∞ —Å—É–º–º—ã
    if not update.text.isdigit():
        await update.reply_text(
            text=f'‚ö†Ô∏è<b>–ù–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—É–º–º—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è:</b> <code>{update.text}</code>\n\n'
                 f'üî¢–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ.\n\n–ù–∞–ø—Ä–∏–º–µ—Ä: <code>150</code> üëà –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–∞ 150 —Ä—É–±–ª–µ–π.',
            reply_markup=await cancel_and_clear_state_keyboard(language_code)
        )

    # –û—á–∏—â–∞–µ–º —Å—Ç—ç–π—Ç —é–∑–µ—Ä–∞
    STATES_STORAGE_DCT.pop(update.from_user.id)

    # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
    user_payment = PAYMENTS_OBJ_DCT[update.from_user.id]
    user_payment.amount = update.text

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–ª–∞—Ç–µ–∂–Ω—É—é —Å–∏—Å—Ç–µ–º—É –∏ –ø–æ –Ω–µ–π –æ—Ç—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º
    if user_payment.pay_system_type == 'qiwi':
        bill_url = await user_payment.qiwi_create_invoice()

    elif user_payment.pay_system_type == 'crystal':
        bill_url = await user_payment.crystalpay_create_invoice()

    # –°–æ–∑–¥–∞—ë–º –≤ –ë–î –∑–∞–ø–∏—Å—å –æ –ø–ª–∞—Ç–µ–∂–µ
    response = await user_payment.create_payment_in_db()
    if not response:
        await update.reply_text(
            text=f'üöß<b>–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–ø–∏—Å—å –æ –ø–ª–∞—Ç–µ–∂–µ.</b>\n\n'
                 f'–ë—É–¥–µ–º –±–ª–∞–≥–æ–¥–∞—Ä–Ω—ã, –µ—Å–ª–∏ —Å–æ–æ–±—â–∏—Ç–µ –Ω–∞–º –æ–± —ç—Ç–æ–π –ø—Ä–æ–±–ª–µ–º–µ. –¢–∞–∫ –º—ã —Å–º–æ–∂–µ–º –±—ã—Å—Ç—Ä–µ–µ –≤—Å—ë –ø–æ—á–∏–Ω–∏—Ç—å',
            reply_markup=await back_to_headpage_keyboard(language_code)
        )
        return

    # –î–∞—ë–º –æ—Ç–≤–µ—Ç —Å–æ —Å—Å—ã–ª–∫–æ–π –Ω–∞ –æ–ø–ª–∞—Ç—É –∏ –∫–Ω–æ–ø–∫–∞–º–∏
    await update.reply_text(
        text=f'üåê<b>–í–∞—à–∞ —Å—Å—ã–ª–∫–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã:</b> {bill_url}\n\n'
             f'‚òùÔ∏è<b>–ë—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã</b> - –∫–æ–≥–¥–∞ –≤ Crystal Pay –±—É–¥–µ—Ç "‚úÖ<u>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ</u>" - –Ω—É–∂–Ω–æ –Ω–∞–∂–∞—Ç—å –Ω–∞ '
             f'–∫–Ω–æ–ø–∫—É "‚úÖ<u>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É</u>" - <b><u>—ç—Ç–æ –±—É–¥–µ—Ç –æ—Å–Ω–æ–≤–∞–Ω–∏–µ–º –¥–ª—è –∑–∞—á–∏—Å–ª–µ–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤.</u></b>',
        reply_markup=await waiting_for_payment_keyboard(language_code)
    )


@Client.on_callback_query(confirm_payment_filter)
async def confirm_payment_handler(client, update: CallbackQuery):
    """
    –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã.
    """
    # –ü–æ–ª—É—á–∞–µ–º —è–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    interface_lang_response = await get_interface_language(tlg_id=update.from_user.id)
    if not interface_lang_response:
        return await update.edit_message_text(text="üõ† Sorry...The bot has problems with translation. Please try"
                                                   " again later, we are already solving this problem")
    language_code = interface_lang_response["language_code"]

    # –ï—Å–ª–∏ –≤ –±–æ—Ç–µ –Ω–µ —Ö—Ä–∞–Ω–∏—Ç—Å—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ UserPayment, —Ç–æ —Å–æ–∑–¥–∞—ë–º –µ—ë –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ë–î
    if not PAYMENTS_OBJ_DCT.get(update.from_user.id):
        payment_from_db = await req_for_get_payment(tlg_id=update.from_user.id)
        if not payment_from_db:  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ —Å–ª—É—á–∞–π –Ω–µ—É–¥–∞—á–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
            await update.edit_message_text(
                text=f'üöß<b>–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ–± –∞–∫—Ç–∏–≤–Ω–æ–º –ø–ª–∞—Ç–µ–∂–µ.</b>\n\n'
                     f'–ë—É–¥–µ–º –±–ª–∞–≥–æ–¥–∞—Ä–Ω—ã, –µ—Å–ª–∏ —Å–æ–æ–±—â–∏—Ç–µ –Ω–∞–º –æ–± —ç—Ç–æ–π –ø—Ä–æ–±–ª–µ–º–µ. –¢–∞–∫ –º—ã —Å–º–æ–∂–µ–º –±—ã—Å—Ç—Ä–µ–µ –≤—Å—ë –ø–æ—á–∏–Ω–∏—Ç—å',
                reply_markup=await back_to_headpage_keyboard(language_code)
            )
            return

        PAYMENTS_OBJ_DCT[update.from_user.id] = UserPayments(
            tlg_id=update.from_user.id,
            pay_system_type=payment_from_db.get("pay_system_type"),
            amount=payment_from_db.get("amount"),
            bill_id=payment_from_db.get("bill_id"),
            bill_url=payment_from_db.get("bill_url"),
            bill_status=payment_from_db.get("bill_status"),
            bill_expire_at=payment_from_db.get("bill_expire_at"),
        )

    user_payment_obj = PAYMENTS_OBJ_DCT[update.from_user.id]  # –ë–µ—Ä—ë–º –æ–±—ä–µ–∫—Ç UserPayment
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞
    if user_payment_obj.pay_system_type == 'crystal':
        check_result = await user_payment_obj.check_crystalpay_invoice()
    elif user_payment_obj.pay_system_type == 'qiwi':
        check_result = await user_payment_obj.check_qiwi_invoice()
    else:
        check_result = '–Ω–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω...'

    await update.edit_message_text(
        text=f'üßæ–°—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞: {check_result}',
        reply_markup=await back_to_headpage_keyboard(language_code)
    )

    if user_payment_obj.bill_status:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–∫—É —Å—Ç–∞—Ç—É—Å–∞ "–æ–ø–ª–∞—á–µ–Ω" –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —Å—á—ë—Ç–∞
        MY_LOGGER.debug(f'–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å –Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–∫—É —Å—Ç–∞—Ç—É—Å–∞ "–æ–ø–ª–∞—á–µ–Ω" –¥–ª—è —Å—á—ë—Ç–∞.')
        await user_payment_obj.create_payment_in_db()

        # –ó–∞—á–∏—Å–ª—è–µ–º —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–∞ –±–∞–ª–∞–Ω—Å
        add_funds_rslt = await user_payment_obj.add_funds_to_balance(
            description=f"–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞, —á–µ—Ä–µ–∑ {user_payment_obj.pay_system_type}"
        )
        MY_LOGGER.debug(f'–†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –∑–∞—á–∏—Å–ª–µ–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å: {add_funds_rslt}')

        if not add_funds_rslt:
            # –û–¢–ü–†–ê–í–õ–Ø–ï–ú –ê–î–ú–ò–ù–ê–ú –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï –û –ü–†–û–ë–õ–ï–ú–´ –ó–ê–ß–ò–°–õ–ï–ù–ò–Ø –°–†–ï–î–°–¢–í –ù–ê –ë–ê–õ–ê–ù–°
            bot_admins = await get_settings(key='redirect_bot_admin')
            if bot_admins:
                for i_bot_admin in bot_admins:
                    await client.send_message(
                        chat_id=i_bot_admin.get('value'),
                        text=f'<b>–°–†–û–ß–ù–û</b>‚ÄºÔ∏è\n\n'
                             f'üõ∞–•—å—é—Å—Ç–æ–Ω, —É –Ω–∞—Å –ø—Ä–æ–±–ª–µ–º—ã!\n\n'
                             f'–Æ–∑–µ—Ä —Å TG ID {user_payment_obj.tlg_id} –ø–æ–ª–æ–∂–∏–ª —Å–µ–±–µ –Ω–∞ –±–∞–ª–∞–Ω—Å '
                             f'{user_payment_obj.amount} —Ä—É–±–ª–µ–π. –û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞, –Ω–æ —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–∞ –±–∞–ª–∞–Ω—Å –Ω–µ '
                             f'–∑–∞—á–∏—Å–ª–µ–Ω—ã. –ù–∞–¥–æ –∑–∞–π—Ç–∏ –≤ –∞–¥–º–∏–Ω–∫—É –∏ –≤—Ä—É—á–Ω—É—é –ø—Ä–∏–±–∞–≤–∏—Ç—å –µ–º—É —ç—Ç—É —Å—É–º–º—É, '
                             f'–∞ —Ç–∞–∫–∂–µ –∏—Å–∫–∞—Ç—å –ø—Ä–∏—á–∏–Ω—É —ç—Ç–æ–π –ø—Ä–æ–±–ª–µ–º—ã. –¢–∞–∫–∂–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–ø–ª–∞—Ç—É, '
                             f'—á—Ç–æ–±—ã –ø—Ä–æ–±–ª–µ–º—ã –Ω–µ –ø–ª–æ–¥–∏–ª–∏—Å—å.',
                        reply_markup=ADMIN_KBRD,
                    )


@Client.on_callback_query(cancel_payment_filter)
async def cancel_payment_handler(client, update: CallbackQuery):
    """
    –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –æ—Ç–º–µ–Ω—ã –ø–ª–∞—Ç–µ–∂–∞. –ê—Ä—Ö–∏–≤–∏—Ä—É–µ–º –ø–ª–∞—Ç—ë–∂ –≤ –ë–î.
    """
    # –ü–æ–ª—É—á–∞–µ–º —è–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    interface_lang_response = await get_interface_language(tlg_id=update.from_user.id)
    if not interface_lang_response:
        return await update.edit_message_text(text="üõ† Sorry...The bot has problems with translation. Please try"
                                                   " again later, we are already solving this problem")
    language_code = interface_lang_response["language_code"]

    user_payment_obj = PAYMENTS_OBJ_DCT[update.from_user.id]
    delete_rslt = await req_for_get_payment(payment_for_dlt_id=user_payment_obj.bill_id)
    if not delete_rslt:  # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å
        await update.edit_message_text(
            text=f'üöß<b>–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–º–µ–Ω–∏—Ç—å –ø–ª–∞—Ç—ë–∂.</b>\n\n'
                 f'–ë—É–¥–µ–º –±–ª–∞–≥–æ–¥–∞—Ä–Ω—ã, –µ—Å–ª–∏ —Å–æ–æ–±—â–∏—Ç–µ –Ω–∞–º –æ–± —ç—Ç–æ–π –ø—Ä–æ–±–ª–µ–º–µ. –¢–∞–∫ –º—ã —Å–º–æ–∂–µ–º –±—ã—Å—Ç—Ä–µ–µ –≤—Å—ë –ø–æ—á–∏–Ω–∏—Ç—å',
            reply_markup=await back_to_headpage_keyboard(language_code)
        )
        return

    await update.edit_message_text(
        text=f'üóë–ü–ª–∞—Ç—ë–∂ —É–¥–∞–ª—ë–Ω.',
        reply_markup=await back_to_headpage_keyboard(language_code)
    )


'''–ü–õ–ê–¢–ï–ñ–ò –ü–ï–†–ï–í–û–î–û–ú –ù–ê –ö–ê–†–¢–£'''


@Client.on_callback_query(pay_to_card_send_data_filter)
async def pay_to_card_send_data_handler(client, update: CallbackQuery):
    """
    –ü–ª–∞—Ç—ë–∂ –ø–µ—Ä–µ–≤–æ–¥–æ–º –Ω–∞ –∫–∞—Ä—Ç—É, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞
    """
    # –ü–æ–ª—É—á–∞–µ–º —è–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    interface_lang_response = await get_interface_language(tlg_id=update.from_user.id)
    if not interface_lang_response:
        return await update.edit_message_text(text="üõ† Sorry...The bot has problems with translation. Please try"
                                                   " again later, we are already solving this problem")
    language_code = interface_lang_response["language_code"]

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞
    pay_method_text = update.data.split()[1]
    settings_lst = await get_settings(key=pay_method_text)    # [{"key": "value"}, ...]
    msg_text = settings_lst[0].get("value")

    await update.edit_message_text(
        text=msg_text,
        reply_markup=await pay_to_card_keyboard(language_code)
    )


@Client.on_callback_query(ask_pay_to_card_confirmation_filter)
async def ask_pay_to_card_confirmation_handler(client, update: CallbackQuery):
    """
    –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞ –ø–µ—Ä–µ–≤–æ–¥–æ–º –Ω–∞ –∫–∞—Ä—Ç—É.
    """
    # –ü–æ–ª—É—á–∞–µ–º —è–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    interface_lang_response = await get_interface_language(tlg_id=update.from_user.id)
    if not interface_lang_response:
        return await update.edit_message_text(text="üõ† Sorry...The bot has problems with translation. Please try"
                                                   " again later, we are already solving this problem")
    language_code = interface_lang_response["language_code"]

    await update.edit_message_text(
        text=MESSAGES[f"send_me_check_message_{language_code}"],
        reply_markup=await cancel_and_clear_state_keyboard(language_code)
    )
    STATES_STORAGE_DCT[update.from_user.id] = 'pay_to_card_confirmation'


@Client.on_message(pay_to_card_confirmation_filter)
async def pay_to_card_confirmation_handler(client, update: Message):
    """
    –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç —é–∑–µ—Ä–∞ —á–µ–∫–∞, –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞.
    """
    # –ü–æ–ª—É—á–∞–µ–º —è–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    interface_lang_response = await get_interface_language(tlg_id=update.from_user.id)
    if not interface_lang_response:
        return await update.reply_text(text="üõ† Sorry...The bot has problems with translation. Please try"
                                            " again later, we are already solving this problem")
    language_code = interface_lang_response["language_code"]

    # –ü—Ä–æ—Å–∏–º –ø–æ–≤—Ç–æ—Ä–∏—Ç—å, –µ—Å–ª–∏ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ —Ñ–æ—Ç–∫–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
    if not update.photo:
        await update.reply_text(
            text=f'üñºü§∑‚Äç‚ôÇÔ∏è<b>–ù–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ —Ñ–æ—Ç–æ –≤ –í–∞—à–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏.</b>\n\n'
                 f'‚úâÔ∏è–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, <b>–æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —á–µ–∫(—Å–∫—Ä–∏–Ω, —Ñ–æ—Ç–æ)</b> –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã.',
            reply_markup=await cancel_and_clear_state_keyboard(language_code)
        )
        return

    # –û—Ç–≤–µ—Ç —é–∑–µ—Ä—É
    await update.reply_text(
        text=f'üëå–í–∞—à–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ –±—É–¥—É—Ç –∑–∞—á–∏—Å–ª–µ–Ω—ã —Å—Ä–∞–∑—É, –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–∞—Ç–µ–∂–∞.',
        reply_markup=await back_to_headpage_keyboard(language_code)
    )
    STATES_STORAGE_DCT.pop(update.from_user.id)  # –û—á–∏—â–∞–µ–º —Å—Ç—ç–π—Ç

    # –ü–æ–ª—É—á–∞–µ–º ID —Ç–æ–≥–æ, –∫—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –ø–ª–∞—Ç–µ–∂–∏
    who_approves_payments = await get_settings(key='who_approves_payments')
    if not who_approves_payments:
        pass  # TODO: —Å–¥–µ–ª–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –Ω–µ—É–¥–∞—á–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞

    who_approves_payments = who_approves_payments[0].get("value")
    await update.copy(
        chat_id=who_approves_payments,
        caption=f'<b>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞</b> –æ—Ç —é–∑–µ—Ä–∞:\nüîπTG_ID: <code>{update.from_user.id}</code>|'
                f'\nüîπusername: @{update.from_user.username}',
        reply_markup=await card_payment_processing_kbrd(tlg_id=update.from_user.id)
    )


@Client.on_callback_query(decline_card_payment_filter)
async def decline_card_payment_handler(client, update: CallbackQuery):
    """
    –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞ –ø–æ –∫–∞—Ä—Ç–µ
    """
    # –ò–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —é–∑–µ—Ä–∞ –æ–± –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞
    await client.send_message(
        chat_id=update.data.split()[1],
        text=f'‚ùå–í–∞—à –ø–ª–∞—Ç—ë–∂ –±—ã–ª –æ—Ç–∫–ª–æ–Ω—ë–Ω'
    )

    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ç–æ–º—É, –∫—Ç–æ –æ—Ç–∫–ª–æ–Ω–∏–ª
    await update.edit_message_text(
        text=f'–Æ–∑–µ—Ä –ø—Ä–æ–∏–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω –æ–± –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞‚ùå'
    )


@Client.on_callback_query(ask_amount_for_confirm_card_payment_filter)
async def ask_amount_for_confirm_card_payment_handler(client, update: CallbackQuery):
    """
    –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ —Å—É–º–º—ã –ø–ª–∞—Ç–µ–∂–∞ –ø–æ –∫–∞—Ä—Ç–µ.
    """
    # –ü–æ–ª—É—á–∞–µ–º —è–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    interface_lang_response = await get_interface_language(tlg_id=update.from_user.id)
    if not interface_lang_response:
        return await update.edit_message_text(text="üõ† Sorry...The bot has problems with translation. Please try"
                                                   " again later, we are already solving this problem")
    language_code = interface_lang_response["language_code"]

    await client.send_message(
        chat_id=update.from_user.id,
        text=f'üíµ<b>–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é –æ–ø–ª–∞—Ç–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</b>\n\n'
             f'‚òùÔ∏è–≠—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å <b>—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ</b>\n\n'
             f'<i>–ï—Å–ª–∏ –∫—Ç–æ-—Ç–æ —É–º—É–¥—Ä–∏–ª—Å—è –æ–ø–ª–∞—Ç–∏—Ç—å —Å –∫–æ–ø–µ–π–∫–∞–º–∏, —Ç–æ, –∫–∞–∫ –≤—ã–¥–∞—é—â–µ–π—Å—è –ª–∏—á–Ω–æ—Å—Ç–∏üë©‚Äçüéì,'
             f' –º–æ–∂–Ω–æ –æ–∫—Ä—É–≥–ª–∏—Ç—å –µ–≥–æ —Å—É–º–º—É –≤ –±–û–ª—å—à—É—é —Å—Ç–æ—Ä–æ–Ω—É –¥–æ –æ—á–µ—Ä–µ–¥–Ω–æ–≥–æ —Ä—É–±–ª—è</i>',
        reply_markup=await cancel_and_clear_state_keyboard(language_code)
    )
    STATES_STORAGE_DCT[update.from_user.id] = 'ask_card_replenish_amount'  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç—ç–π—Ç –¥–ª—è –∞–¥–º–∏–Ω–∞
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º tlg_id –ø–ª–∞—Ç–µ–ª—å—â–∏–∫–∞ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
    TEMP_STORAGE_DCT[update.from_user.id] = {'payer_id': update.data.split()[1]}


@Client.on_message(confirm_card_payment_filter)
async def confirm_card_payment_handler(client, update: Message):
    """
    –•—ç–Ω–¥–ª–µ—Ä –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞ –∏ –∑–∞—á–∏—Å–ª–µ–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å.
    """
    # –ü–æ–ª—É—á–∞–µ–º —è–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    interface_lang_response = await get_interface_language(tlg_id=update.from_user.id)
    if not interface_lang_response:
        return await update.edit_message_text(text="üõ† Sorry...The bot has problems with translation. Please try"
                                                   " again later, we are already solving this problem")
    language_code = interface_lang_response["language_code"]

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å–ª–∏ –≤–≤–µ–¥–µ–Ω–æ –Ω–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ
    if not update.text.isdigit():
        await update.reply_text(
            text=f'‚ùóÔ∏è<b>–í–≤–µ–¥–µ–Ω–æ –Ω–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ.</b>\n‚ùå<code>{update.text}</code> - –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç\n\n'
                 f'üíµ<b>–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é –æ–ø–ª–∞—Ç–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</b>\n'
                 f'‚òùÔ∏è–≠—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å <b>—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ</b>\n',
            reply_markup=await cancel_and_clear_state_keyboard(language_code)
        )
        return

    # –û—á–∏—â–∞–µ–º —Å—Ç—ç–π—Ç –∞–¥–º–∏–Ω–∞
    STATES_STORAGE_DCT.pop(update.from_user.id)

    # –ü–æ–ª—É—á–∞–µ–º tlg_id –ø–ª–∞—Ç–µ–ª—å—â–∏–∫–∞
    payer_id = TEMP_STORAGE_DCT.get(update.from_user.id).get('payer_id')
    # –ü–æ—Å—ã–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ —é–∑–µ—Ä–∞
    response = await post_for_change_balance(data={
        "action": "+",
        "value": update.text,
        "tlg_id": payer_id,
        "description": "–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –ø–µ—Ä–µ–≤–æ–¥–æ–º –Ω–∞ –∫–∞—Ä—Ç—É."
    })
    if not response:  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ—É–¥–∞—á–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
        await update.reply_text(
            text=f'–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ —é–∑–µ—Ä–∞ {payer_id} –Ω–∞ +{update.text} —Ä—É–±.\n\n'
                 f'–†–µ–∫–æ–º–µ–Ω–¥—É—é —Å–µ–π—á–∞—Å –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å —é–∑–µ—Ä–∞—è –≤—Ä—É—á–Ω—É—é –≤ –∞–¥–º–∏–Ω–∫–µ –∏ –¥–∞–ª–µ–µ —Ä–µ—à–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—É.',
        )
    else:
        await update.reply_text(
            text=f'üíµ<b>+{update.text} —Ä—É–±. –∑–∞—á–∏—Å–ª–µ–Ω–æ –Ω–∞ –±–∞–ª–∞–Ω—Å —é–∑–µ—Ä–∞ <code>{payer_id}</code></b>',
        )
        await client.send_message(
            chat_id=payer_id,
            text=f'üíµ<b>+{update.text} —Ä—É–±. –∑–∞—á–∏—Å–ª–µ–Ω–æ –Ω–∞ –í–∞—à –±–∞–ª–∞–Ω—Å!</b>\nü§ù–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—Å.'
        )
