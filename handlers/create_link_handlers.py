import datetime
import math
import random
from urllib.parse import urlparse

from pyrogram import Client, filters
from pyrogram.types import Message, CallbackQuery

from filters.create_link_filters import filter_for_create_link_btn_handler, filter_for_get_doc_with_links_handler, \
    filter_for_waiting_file_processing_handler, filter_minus_redirect_handler, filter_plus_redirect_handler, \
    filter_link_shortening_handler
from keyboards.bot_keyboards import CANCEL_AND_CLEAR_STATE_KBRD, choose_numb_of_redirect_kbrd
from secondary_functions.req_to_bot_api import update_or_create_link, get_settings, get_user_data
from settings.config import STATES_STORAGE_DCT, REDIRECT_NUMBERS_DCT


@Client.on_callback_query(filter_for_create_link_btn_handler)
async def create_link_btn_handler(client, update):
    """
    –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–°–û–ó–î–ê–¢–¨ –°–°–´–õ–ö–£".
    –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –≤ –∫–æ—Ç–æ—Ä–æ–º –æ–∂–∏–¥–∞–µ–º –ø–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å–æ —Å—Å—ã–ª–∫–∞–º–∏,
    –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å–∞–º —Ñ–∞–π–ª –∏ –¥–∞—ë–º –∫–Ω–æ–ø–∫—É "–û—Ç–º–µ–Ω–∏—Ç—å".
    """
    STATES_STORAGE_DCT[update.from_user.id] = 'upload_file_with_links'
    await update.answer(
        text=f"üìÑ–ü—Ä–∏—à–ª–∏—Ç–µ —Ñ–∞–π–ª —Å–æ —Å—Å—ã–ª–∫–∞–º–∏:\n\nüîπ –∫–∞–∂–¥–∞—è —Å—Å—ã–ª–∫–∞ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏;\n"
             f"üîπ –≤—Å–µ —Å—Å—ã–ª–∫–∏ –¥–æ–ª–∂–Ω—ã –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å http:// https:// ftp:// –∏ —Ç.–ø.",
        show_alert=True
    )
    await update.edit_message_text(
        text=f"üìÑ–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ —Ñ–∞–π–ª —Å–æ —Å—Å—ã–ª–∫–∞–º–∏:\n\n"
             f"üîπ –∫–∞–∂–¥–∞—è —Å—Å—ã–ª–∫–∞ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏;\n"
             f"üîπ —Å—Å—ã–ª–∫–∏ –¥–æ–ª–∂–Ω—ã –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å <code>http://</code> <code>https://</code> <code>ftp://</code> –∏ —Ç.–ø.;\n"
             f"üîπ <b>–Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–µ –±—É–¥—É—Ç –ø—Ä–æ—á–∏—Ç–∞–Ω—ã.</b>",
        reply_markup=CANCEL_AND_CLEAR_STATE_KBRD
    )


@Client.on_message(filters.document & filter_for_get_doc_with_links_handler)
async def get_doc_with_links_handler(client, update: Message):
    """
    –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞ (txt —Ñ–∞–π–ª) —Å–æ —Å—Å—ã–ª–∫–∞–º–∏. –ö–∞–∂–¥–∞—è —Å—Å—ã–ª–∫–∞ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏.
    –û—Ç–≤–µ—á–∞–µ–º, —á—Ç–æ –∏–¥—ë—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏ —ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –≤—Ä–µ–º—è.
    –°–∫–∞—á–∏–≤–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç –∏–∑ —Ç–µ–ª–µ–≥–∏, —á–∏—Ç–∞–µ–º –µ–≥–æ.
    –ò—Ç–µ—Ä–∏—Ä—É–µ–º—Å—è –ø–æ —Å—Ç—Ä–æ–∫–∞–º, –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å, –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –ë–î.
    """
    await update.reply_text(
        text=f'üñç–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –í–∞—à –¥–æ–∫—É–º–µ–Ω—Ç.\n\n'
             f'‚è≥–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è, –µ—Å–ª–∏ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–µ –º–Ω–æ–≥–æ —Å—Å—ã–ª–æ–∫.\n'
             f'<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ.</b>'
    )
    # [state name, –≤—Å–µ–≥–æ —Å—Ç—Ä–æ–∫ –≤ —Ñ–∞–π–ª–µ, –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å—Ç—Ä–æ–∫]
    STATES_STORAGE_DCT[update.from_user.id] = ['waiting_file_processing', 0, 0]

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞
    tlg_file = await update.download(
        file_name=f'files/link_files/{update.from_user.id}/links.txt',
        in_memory=False
    )
    with open(file=tlg_file, mode='r', encoding='utf-8') as links_file:
        all_lines_count = 0
        valid_links_count = 0
        for i_line in links_file:
            all_lines_count += 1
            i_line = i_line.replace(' ', '')

            # –ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Å—Ç—Ä–æ–∫–∞ –≤ —Ñ–∞–π–ª–µ - —ç—Ç–æ —Å—Å—ã–ª–∫–∞
            is_link = False
            parsed_lnk = urlparse(i_line)
            if parsed_lnk.scheme and parsed_lnk.netloc and '.' in parsed_lnk.netloc:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ–±—ã –≤ –∞–¥—Ä–µ—Å–µ –Ω–µ –±—ã–ª–æ 2—Ö —Ç–æ—á–µ–∫ –ø–æ–¥—Ä—è–¥
                for i_indx, i_elem in enumerate(parsed_lnk.netloc):
                    if i_indx == len(parsed_lnk.netloc) - 1:
                        is_link = True
                        break
                    if i_elem == '.' and parsed_lnk.netloc[i_indx + 1] == '.':
                        break
            if is_link:
                # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Å—Å—ã–ª–∫—É –≤ –ë–î —á–µ—Ä–µ–∑ –∑–∞–ø—Ä–æ—Å API
                write_link_rslt = await update_or_create_link(data={
                    'tlg_id': update.from_user.id,
                    'link': i_line
                })
                if write_link_rslt:
                    valid_links_count += 1
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ä—è–¥–æ–º —Å–æ —Å—Ç—ç–π—Ç–æ–º —é–∑–µ—Ä–∞, —á—Ç–æ–±—ã –¥–∞–≤–∞—Ç—å –æ—Ç—á—ë—Ç, –µ—Å–ª–∏ –µ–º—É —Ç–∞–º –Ω–µ —Å–∏–¥–∏—Ç—Å—è —Å–ø–æ–∫–æ–π–Ω–æ
            STATES_STORAGE_DCT[update.from_user.id] = ['waiting_file_processing', all_lines_count, valid_links_count]

    # –î–∞—ë–º –æ—Ç–≤–µ—Ç –ø–æ –æ–∫–æ–Ω—á–∞–Ω–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞
    tariff = await get_settings(key='tariff')  # –ü–æ–ª—É—á–∞–µ–º —Ü–µ–Ω—É —Ç–∞—Ä–∏—Ñ–∞ –≤ –ë–î
    user_data = await get_user_data(tlg_id=update.from_user.id)  # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ–± —é–∑–µ—Ä–µ (–Ω—É–∂–µ–Ω –±–∞–ª–∞–Ω—Å)
    REDIRECT_NUMBERS_DCT[update.from_user.id] = [1, user_data.get("balance"), tariff[0].get("value")]
    await update.reply_text(
        text=f'‚úÖ<b>–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.</b>\n\n'
             f"üìñ<b>–ü—Ä–æ—á–∏—Ç–∞–Ω–æ: {STATES_STORAGE_DCT[update.from_user.id][1]} —Å—Ç—Ä–æ–∫ —Ñ–∞–π–ª–∞</b>\n"
             f"üíæ<b>–ó–∞–ø–∏—Å–∞–Ω–æ: {STATES_STORAGE_DCT[update.from_user.id][2]} —Å—Å—ã–ª–æ–∫</b>\n\n"
             f'üí≤–¶–µ–Ω–∞ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞: {tariff[0].get("value")} —Ä—É–±.\n'
             f'üí∞–ë–∞–ª–∞–Ω—Å: {user_data.get("balance")} —Ä—É–±.\n'
             f'üßæ–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {1 * float(tariff[0].get("value"))} —Ä—É–±.\n\n'
             f'üîÄ–í—ã–±–µ—Ä–∏—Ç–µ <b>—Å–∫–æ–ª—å–∫–æ</b> –¥–µ–ª–∞—Ç—å <b>—Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤</b> –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Å—ã–ª–∫–∏?',
        reply_markup=await choose_numb_of_redirect_kbrd()
    )


@Client.on_callback_query(filter_minus_redirect_handler)
async def minus_redirect_handler(client, update: CallbackQuery):
    """
    –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∫–Ω–æ–ø–æ–∫ '–º–∏–Ω—É—Å —Ä–µ–¥–∏—Ä–µ–∫—Ç(—ã)'
    """
    REDIRECT_NUMBERS_DCT[update.from_user.id][0] -= float(update.data.split()[1])

    if REDIRECT_NUMBERS_DCT[update.from_user.id][0] < 1:  # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–æ –º–µ–Ω–µ–µ 1 —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞
        REDIRECT_NUMBERS_DCT[update.from_user.id][0] = 1
        text_for_message = f'‚ùóÔ∏è<b>–†–µ–¥–∏—Ä–µ–∫—Ç–æ–≤ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 1</b>\n' \
                           f'‚òëÔ∏è<b>–í—ã–±—Ä–∞–Ω–æ {REDIRECT_NUMBERS_DCT[update.from_user.id][0]} ' \
                           f'—Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Å—ã–ª–∫–∏</b>\n\n' \
                           f"üìñ<b>–ü—Ä–æ—á–∏—Ç–∞–Ω–æ: {STATES_STORAGE_DCT[update.from_user.id][1]} —Å—Ç—Ä–æ–∫ —Ñ–∞–π–ª–∞</b>\n" \
                           f"üíæ<b>–ó–∞–ø–∏—Å–∞–Ω–æ: {STATES_STORAGE_DCT[update.from_user.id][2]} —Å—Å—ã–ª–æ–∫</b>\n\n" \
                           f'üí≤–¶–µ–Ω–∞ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞: {REDIRECT_NUMBERS_DCT[update.from_user.id][2]} —Ä—É–±.\n' \
                           f'üí∞–ë–∞–ª–∞–Ω—Å: {REDIRECT_NUMBERS_DCT[update.from_user.id][1]} —Ä—É–±.\n' \
                           f'üßæ–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {REDIRECT_NUMBERS_DCT[update.from_user.id][0] * float(REDIRECT_NUMBERS_DCT[update.from_user.id][2])} —Ä—É–±.\n\n' \
                           f'üîÄ–í—ã–±–µ—Ä–∏—Ç–µ <b>—Å–∫–æ–ª—å–∫–æ</b> –¥–µ–ª–∞—Ç—å <b>—Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤</b> –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Å—ã–ª–∫–∏?'
        inline_kbrd = await choose_numb_of_redirect_kbrd(
            redirect_numb=str(int(REDIRECT_NUMBERS_DCT[update.from_user.id][0])),
            replenish_balance=False
        )
    else:
        text_for_message = f'‚òëÔ∏è<b>–í—ã–±—Ä–∞–Ω–æ {REDIRECT_NUMBERS_DCT[update.from_user.id][0]} ' \
                           f'—Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Å—ã–ª–∫–∏</b>\n\n' \
                           f"üìñ<b>–ü—Ä–æ—á–∏—Ç–∞–Ω–æ: {STATES_STORAGE_DCT[update.from_user.id][1]} —Å—Ç—Ä–æ–∫ —Ñ–∞–π–ª–∞</b>\n" \
                           f"üíæ<b>–ó–∞–ø–∏—Å–∞–Ω–æ: {STATES_STORAGE_DCT[update.from_user.id][2]} —Å—Å—ã–ª–æ–∫</b>\n\n" \
                           f'üí≤–¶–µ–Ω–∞ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞: {REDIRECT_NUMBERS_DCT[update.from_user.id][2]} —Ä—É–±.\n' \
                           f'üí∞–ë–∞–ª–∞–Ω—Å: {REDIRECT_NUMBERS_DCT[update.from_user.id][1]} —Ä—É–±.\n' \
                           f'üßæ–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {REDIRECT_NUMBERS_DCT[update.from_user.id][0] * float(REDIRECT_NUMBERS_DCT[update.from_user.id][2])} —Ä—É–±.\n\n' \
                           f'üîÄ–í—ã–±–µ—Ä–∏—Ç–µ <b>—Å–∫–æ–ª—å–∫–æ</b> –¥–µ–ª–∞—Ç—å <b>—Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤</b> –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Å—ã–ª–∫–∏?'
        inline_kbrd = await choose_numb_of_redirect_kbrd(
            redirect_numb=str(int(REDIRECT_NUMBERS_DCT[update.from_user.id][0])),
            replenish_balance=False
        )
    await update.edit_message_text(
        text=text_for_message,
        reply_markup=inline_kbrd
    )


@Client.on_callback_query(filter_plus_redirect_handler)
async def plus_redirect_handler(client, update: CallbackQuery):
    """
    –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∫–Ω–æ–ø–æ–∫ '–ø–ª—é—Å —Ä–µ–¥–∏—Ä–µ–∫—Ç(—ã)'.
    """
    REDIRECT_NUMBERS_DCT[update.from_user.id][0] += float(update.data.split()[1])
    total_price = REDIRECT_NUMBERS_DCT[update.from_user.id][0] * float(REDIRECT_NUMBERS_DCT[update.from_user.id][2])

    if total_price > float(REDIRECT_NUMBERS_DCT[update.from_user.id][1]):  # –ï—Å–ª–∏ –æ–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –±–æ–ª—å—à–µ –±–∞–ª–∞–Ω—Å–∞
        # –ù–µ–±–æ–ª—å—à–æ–π —Ä–∞—Å—á—ë—Ç
        difference = total_price - float(REDIRECT_NUMBERS_DCT[update.from_user.id][1])
        numb_of_redirects = math.ceil(difference / float(REDIRECT_NUMBERS_DCT[update.from_user.id][2]))

        # –û—Ç–Ω–∏–º–∞–µ–º –∫–æ–ª-–≤–æ —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤, —á—Ç–æ–±—ã –±—ã–ª–æ –Ω–µ –±–æ–ª—å—à–µ —Ç–µ–∫—É—â–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞, –ø–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ –¥–∞—ë–º –æ—Ç–≤–µ—Ç
        REDIRECT_NUMBERS_DCT[update.from_user.id][0] -= numb_of_redirects
        total_price = REDIRECT_NUMBERS_DCT[update.from_user.id][0] * float(REDIRECT_NUMBERS_DCT[update.from_user.id][2])
        text_for_message = f'‚ùóÔ∏è<b>–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –Ω–∞ {difference} —Ä—É–±.</b>\n' \
                           f'‚òëÔ∏è<b>–í—ã–±—Ä–∞–Ω–æ {REDIRECT_NUMBERS_DCT[update.from_user.id][0]} ' \
                           f'—Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Å—ã–ª–∫–∏</b>\n\n' \
                           f"üìñ<b>–ü—Ä–æ—á–∏—Ç–∞–Ω–æ: {STATES_STORAGE_DCT[update.from_user.id][1]} —Å—Ç—Ä–æ–∫ —Ñ–∞–π–ª–∞</b>\n" \
                           f"üíæ<b>–ó–∞–ø–∏—Å–∞–Ω–æ: {STATES_STORAGE_DCT[update.from_user.id][2]} —Å—Å—ã–ª–æ–∫</b>\n\n" \
                           f'üí≤–¶–µ–Ω–∞ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞: {REDIRECT_NUMBERS_DCT[update.from_user.id][2]} —Ä—É–±.\n' \
                           f'üí∞–ë–∞–ª–∞–Ω—Å: {REDIRECT_NUMBERS_DCT[update.from_user.id][1]} —Ä—É–±.\n' \
                           f'üßæ–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {total_price} —Ä—É–±.\n\n' \
                           f'üîÄ–í—ã–±–µ—Ä–∏—Ç–µ <b>—Å–∫–æ–ª—å–∫–æ</b> –¥–µ–ª–∞—Ç—å <b>—Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤</b> –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Å—ã–ª–∫–∏?'
        inline_kbrd = await choose_numb_of_redirect_kbrd(
            redirect_numb=str(int(REDIRECT_NUMBERS_DCT[update.from_user.id][0])),
            replenish_balance=True
        )
    else:
        text_for_message = f'‚òëÔ∏è<b>–í—ã–±—Ä–∞–Ω–æ {REDIRECT_NUMBERS_DCT[update.from_user.id][0]} ' \
                           f'—Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Å—ã–ª–∫–∏</b>\n\n' \
                           f"üìñ<b>–ü—Ä–æ—á–∏—Ç–∞–Ω–æ: {STATES_STORAGE_DCT[update.from_user.id][1]} —Å—Ç—Ä–æ–∫ —Ñ–∞–π–ª–∞</b>\n" \
                           f"üíæ<b>–ó–∞–ø–∏—Å–∞–Ω–æ: {STATES_STORAGE_DCT[update.from_user.id][2]} —Å—Å—ã–ª–æ–∫</b>\n\n" \
                           f'üí≤–¶–µ–Ω–∞ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞: {REDIRECT_NUMBERS_DCT[update.from_user.id][2]} —Ä—É–±.\n' \
                           f'üí∞–ë–∞–ª–∞–Ω—Å: {REDIRECT_NUMBERS_DCT[update.from_user.id][1]} —Ä—É–±.\n' \
                           f'üßæ–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {total_price} —Ä—É–±.\n\n' \
                           f'üîÄ–í—ã–±–µ—Ä–∏—Ç–µ <b>—Å–∫–æ–ª—å–∫–æ</b> –¥–µ–ª–∞—Ç—å <b>—Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤</b> –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Å—ã–ª–∫–∏?'
        inline_kbrd = await choose_numb_of_redirect_kbrd(
            redirect_numb=str(int(REDIRECT_NUMBERS_DCT[update.from_user.id][0])),
            replenish_balance=False
        )
    await update.edit_message_text(
        text=text_for_message,
        reply_markup=inline_kbrd
    )


@Client.on_callback_query(filter_link_shortening_handler)
async def choosing_link_shortening_service_handler(client, update: CallbackQuery):
    """
    –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–µ—Ä–≤–∏—Å–∞ –ø–æ —Å–æ–∫—Ä–∞—â–µ–Ω–∏—é —Å—Å—ã–ª–æ–∫.
    –ü–æ–ø–∞–¥–∞–µ–º —Å—é–¥–∞ –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ —Å callback_data='to_link_shortening'
    """
    await update.answer(f'–ü–µ—Ä–µ—à–ª–∏ –∫ –≤—ã–±–æ—Ä—É —Å–µ—Ä–≤–∏—Å–∞ –ø–æ —Å–æ–∫—Ä–∞—â–µ–Ω–∏—é —Å—Å—ã–ª–æ–∫.')


@Client.on_message(filter_for_waiting_file_processing_handler)
async def waiting_file_processing(client, update: Message):
    """
    –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π, –∫–æ–≥–¥–∞ —é–∑–µ—Ä –æ–∂–∏–¥–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞.
    –û—Ç–≤–µ—á–∞–µ–º, —á—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å –∏–¥—ë—Ç, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å.
    """
    # TODO: –Ω–∞ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—É –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É, —Å–∫–æ–ª—å–∫–æ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å—Ç—Ä–æ–∫ –≤ —Ñ–∞–π–ª–µ
    answers_lst = [
        '‚åõÔ∏è–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ. –Ø –∑–∞–Ω–∏–º–∞—é—Å—å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –í–∞—à–µ–≥–æ —Ñ–∞–π–ª–∞',
        '‚åõÔ∏è–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –í–∞–º –ø—Ä–∏–¥—ë—Ç—Å—è –µ—â—ë –Ω–µ–º–Ω–æ–≥–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å, —è –∑–∞–Ω–∏–º–∞—é—Å—å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –í–∞—à–µ–≥–æ —Ñ–∞–π–ª–∞.',
        # –ù–µ—Ü–µ–Ω–∑—É—Ä–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
        '–ë—É–¥–µ—à—å –µ–±–∞—Ç—å –º–Ω–µ –≥–æ–ª–æ–≤—É, –≤–æ–æ–±—â–µ –Ω–∏—Ö—É—è –¥–µ–ª–∞—Ç—å –Ω–µ —Å—Ç–∞–Ω—É.',
        '<b>–ü–æ—à—ë–ª –Ω–∞—Ö—É–π</b>',
        '–†—É—á–æ–Ω–∫–∏ —Å–≤–æ–∏ —à–∞–ª–æ–≤–ª–∏–≤—ã–µ —É–±–µ—Ä–∏ –∫—É–¥–∞-–Ω–∏–±—É–¥—å –≤ –¥—Ä—É–≥–æ–µ –º–µ—Å—Ç–æ. '
        '–û—Ç —Ç–æ–≥–æ, —á—Ç–æ —Ç—ã –¥—Ä–æ—á–∏—Ç—å –º–µ–Ω—è –±—É–¥–µ—à—å –ø—Ä–æ—Ü–µ—Å—Å —Ç–æ–ª—å–∫–æ –∑–∞–º–µ–¥–ª–∏—Ç—Å—è. '
        '–ü–æ—Ç–æ–º—É, —á—Ç–æ —è —Ö–æ—Ç—å –∏ –ø—Ä–æ–≥—Ä–∞–º–º–∞, –Ω–æ –æ–¥–∏–Ω —Ö—É–π —Ç—Ä–∞—á—É –≤—Ä–µ–º—è –Ω–∞ —Ç–æ, —á—Ç–æ–±—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –≤–æ—Ç —Ç–∞–∫–∏–º —É–µ–±–∞–Ω–∞–º, '
        '–∫–æ—Ç–æ—Ä—ã—Ö –±—ã–≤–∞–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤ –∫–∞–∂–¥—ã–π –º–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏.',
        '‚òùÔ∏è<b>–í—Ä–µ–º—è –ª–µ—á–∏—Ç...</b>\n–î–∞–∂–µ —Ç–∞–∫–∏—Ö –¥–æ–ª–±–æ–µ–±–æ–≤ –∫–∞–∫ —Ç—ã. –ü–æ—ç—Ç–æ–º—É —Å–∏–¥–∏ –∏ –∂–¥–∏.'
    ]
    await update.reply_text(
        text=f"{random.choice(answers_lst)}\n\n"
             f"üìñ<b>–ü—Ä–æ—á–∏—Ç–∞–Ω–æ: {STATES_STORAGE_DCT[update.from_user.id][1]} —Å—Ç—Ä–æ–∫ —Ñ–∞–π–ª–∞</b>\n"
             f"üíæ<b>–ó–∞–ø–∏—Å–∞–Ω–æ: {STATES_STORAGE_DCT[update.from_user.id][2]} —Å—Å—ã–ª–æ–∫</b>"
    )
