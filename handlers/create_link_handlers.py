import math
import random
from urllib.parse import urlparse
from decimal import Decimal

from loguru import logger
from pyrogram import Client, filters
from pyrogram.types import Message, CallbackQuery

from bot_objects.links_obj import RedirectLinks
from filters.create_link_filters import filter_for_create_link_btn_handler, filter_for_get_doc_with_links_handler, \
    filter_for_waiting_file_processing_handler, filter_minus_redirect_handler, filter_plus_redirect_handler, \
    filter_link_shortening_handler, filter_processing_links_handler
from keyboards.bot_keyboards import CANCEL_AND_CLEAR_STATE_KBRD, choose_numb_of_redirect_kbrd, CHOOSE_SHORT_LINK_KBRD, \
    BACK_TO_HEAD_PAGE_KBRD, MY_BALANCE_PART_KBRD
from secondary_functions.req_to_bot_api import update_or_create_link, get_settings, get_user_data
from settings.config import STATES_STORAGE_DCT, LINKS_OBJ_DCT


@Client.on_callback_query(filter_for_create_link_btn_handler)
async def create_link_btn_handler(client, update):
    """
    –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–°–û–ó–î–ê–¢–¨ –°–°–´–õ–ö–£".
    –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –≤ –∫–æ—Ç–æ—Ä–æ–º –æ–∂–∏–¥–∞–µ–º –ø–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª —Å–æ —Å—Å—ã–ª–∫–∞–º–∏,
    –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å–∞–º —Ñ–∞–π–ª –∏ –¥–∞—ë–º –∫–Ω–æ–ø–∫—É "–û—Ç–º–µ–Ω–∏—Ç—å".
    """
    # –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å —é–∑–µ—Ä–∞ –∏ —Ç–∞—Ä–∏—Ñ –∏–∑ –ë–î
    user_balance = await get_user_data(tlg_id=update.from_user.id)
    user_balance = Decimal(user_balance.get('balance'))
    tariff = await get_settings(key='tariff')
    tariff = Decimal(tariff[0].get('value'))
    # –ï—Å–ª–∏ –±–∞–ª–∞–Ω—Å –º–µ–Ω—å—à–µ —Ç–∞—Ä–∏—Ñ–∞
    if tariff > user_balance:
        await update.edit_message_text(     # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–ø–æ–ª–Ω–∏—Ç—å —Å—á—ë—Ç
            text=f"‚ùóÔ∏è–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Å—ã–ª–æ–∫.\nüí∞<b>–í–∞—à –±–∞–ª–∞–Ω—Å: {user_balance} —Ä—É–±.</b>\n"
                 f"ü™ô<b>–¶–µ–Ω–∞ –æ–¥–Ω–æ–≥–æ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞ –¥–ª—è —Å—Å—ã–ª–∫–∏: {tariff} —Ä—É–±.</b>",
            reply_markup=MY_BALANCE_PART_KBRD
        )
        return

    STATES_STORAGE_DCT[update.from_user.id] = 'upload_file_with_links'
    await update.answer(
        text=f"üìÑ–ü—Ä–∏—à–ª–∏—Ç–µ —Ñ–∞–π–ª —Å–æ —Å—Å—ã–ª–∫–∞–º–∏:\n\nüîπ –∫–∞–∂–¥–∞—è —Å—Å—ã–ª–∫–∞ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏;\n"
             f"üîπ –≤—Å–µ —Å—Å—ã–ª–∫–∏ –¥–æ–ª–∂–Ω—ã –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å http:// https:// ftp:// –∏ —Ç.–ø.",
        show_alert=True
    )
    await update.edit_message_text(
        text=f"üìÑ–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ <b><u>TXT</u> —Ñ–∞–π–ª —Å–æ —Å—Å—ã–ª–∫–∞–º–∏</b>:\n\n"
             f"üîπ –∫–∞–∂–¥–∞—è —Å—Å—ã–ª–∫–∞ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏;\n"
             f"üîπ —Å—Å—ã–ª–∫–∏ –¥–æ–ª–∂–Ω—ã –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å <code>http://</code> <code>https://</code> <code>ftp://</code> –∏ —Ç.–ø.;\n"
             f"üîπ <b>–Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–µ –±—É–¥—É—Ç –ø—Ä–æ—á–∏—Ç–∞–Ω—ã.</b>",
        reply_markup=CANCEL_AND_CLEAR_STATE_KBRD
    )


@Client.on_message(filters.document & filter_for_get_doc_with_links_handler)
async def get_doc_with_links_handler(client, update: Message):
    """
    –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞ (txt —Ñ–∞–π–ª) —Å–æ —Å—Å—ã–ª–∫–∞–º–∏. –ö–∞–∂–¥–∞—è —Å—Å—ã–ª–∫–∞ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏.
    –û—Ç–≤–µ—á–∞–µ–º, —á—Ç–æ –∏–¥—ë—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏ —ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –≤—Ä–µ–º—è.
    –°–∫–∞—á–∏–≤–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç –∏–∑ —Ç–µ–ª–µ–≥–∏, —á–∏—Ç–∞–µ–º –µ–≥–æ.
    –ò—Ç–µ—Ä–∏—Ä—É–µ–º—Å—è –ø–æ —Å—Ç—Ä–æ–∫–∞–º, –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å, –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –ë–î.
    """
    await update.reply_text(
        text=f'üñç–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –í–∞—à –¥–æ–∫—É–º–µ–Ω—Ç.\n\n'
             f'‚è≥–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è, –µ—Å–ª–∏ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–µ –º–Ω–æ–≥–æ —Å—Å—ã–ª–æ–∫.\n'
             f'<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ.</b>'
    )
    # [state name, –≤—Å–µ–≥–æ —Å—Ç—Ä–æ–∫ –≤ —Ñ–∞–π–ª–µ, –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å—Ç—Ä–æ–∫]
    STATES_STORAGE_DCT[update.from_user.id] = ['waiting_file_processing', 0, 0]

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞
    tlg_file = await update.download(
        file_name=f'files/link_files/{update.from_user.id}/links.txt',
        in_memory=False
    )
    with open(file=tlg_file, mode='r', encoding='utf-8') as links_file:
        all_lines_count = 0
        valid_links_count = 0
        links = ''
        for i_line in links_file:
            all_lines_count += 1
            i_line = i_line.replace(' ', '')

            # –ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Å—Ç—Ä–æ–∫–∞ –≤ —Ñ–∞–π–ª–µ - —ç—Ç–æ —Å—Å—ã–ª–∫–∞
            is_link = False
            i_line = i_line.replace('\ufeff', '')   # –£—Å—Ç—Ä–∞–Ω—è–µ–º BOM —Å–∏–º–≤–æ–ª, –µ—Å–ª–∏ –æ–Ω –±—É–¥–µ—Ç
            parsed_lnk = urlparse(i_line)
            logger.debug(f'–†–∞–∑–±–∏—Ä–∞–µ–º—Å—è —Å—Å—ã–ª–∫—É –Ω–∞ –¥–µ—Ç–∞–ª–∏ : {i_line}')
            if parsed_lnk.scheme and parsed_lnk.netloc and '.' in parsed_lnk.netloc:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ–±—ã –≤ –∞–¥—Ä–µ—Å–µ –Ω–µ –±—ã–ª–æ 2—Ö —Ç–æ—á–µ–∫ –ø–æ–¥—Ä—è–¥
                for i_indx, i_elem in enumerate(parsed_lnk.netloc):
                    if i_indx == len(parsed_lnk.netloc) - 1:
                        is_link = True
                        break
                    if i_elem == '.' and parsed_lnk.netloc[i_indx + 1] == '.':
                        break
            if is_link:
                if len(links) == 0:
                    links = i_line
                else:
                    links = ' '.join([links, i_line])
                valid_links_count += 1

                # # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Å—Å—ã–ª–∫—É –≤ –ë–î —á–µ—Ä–µ–∑ –∑–∞–ø—Ä–æ—Å API
                # write_link_rslt = await update_or_create_link(data={
                #     'tlg_id': update.from_user.id,
                #     'link': i_line
                # })

    STATES_STORAGE_DCT.pop(update.from_user.id)     # –û—á–∏—â–∞–µ–º —Å—Ç—ç–π—Ç –æ–∂–∏–¥–∞–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞

    tariff = await get_settings(key='tariff')  # –ü–æ–ª—É—á–∞–µ–º —Ü–µ–Ω—É —Ç–∞—Ä–∏—Ñ–∞ –≤ –ë–î
    user_data = await get_user_data(tlg_id=update.from_user.id)  # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ–± —é–∑–µ—Ä–µ (–Ω—É–∂–µ–Ω –±–∞–ª–∞–Ω—Å)
    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å 1_—Ä–µ–¥–∏—Ä–µ–∫—Ç * —á–∏—Å–ª–æ_—Å—Å—ã–ª–æ–∫ * —Ç–∞—Ä–∏—Ñ
    total_price = 1 * len(links.split(' ')) * int(tariff[0].get("value"))
    # –°–æ–∑–¥–∞—ë–º –∏–Ω—Å—Ç–∞–Ω—Å –∫–ª–∞—Å—Å–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ –æ —Ä–µ–¥–∏—Ä–µ–∫—Ç–µ –¥–ª—è —Å—Å—ã–ª–æ–∫
    links_obj = RedirectLinks(
        tlg_id=update.from_user.id,
        links=links,
        tariff=tariff[0].get("value"),
        balance=user_data.get("balance"),
        redirect_numb=1,
        total_price=total_price,
    )
    LINKS_OBJ_DCT[update.from_user.id] = links_obj  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ –≤ —Å–ª–æ–≤–∞—Ä–µ

    # –ï—Å–ª–∏ –∏—Ç–æ–≥–æ–≤–∞—è —Ü–µ–Ω–∞ –¥–ª—è –æ–¥–Ω–æ–≥–æ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞ –±–æ–ª—å—à–µ –±–∞–ª–∞–Ω—Å–∞
    if links_obj.total_price > links_obj.balance:
        await update.reply_text(
            text=f"‚ùóÔ∏è<b>–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤.</b>\n\nüí∞–í–∞—à –±–∞–ª–∞–Ω—Å: <b>{links_obj.balance} —Ä—É–±.</b>\n"
                 f"üßæ–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –æ–¥–Ω–æ–≥–æ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞ –¥–ª—è {len(links.split(' '))} —Å—Å—ã–ª–æ–∫: "
                 f"<b>{links_obj.total_price} —Ä—É–±.</b>\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å.",
            reply_markup=MY_BALANCE_PART_KBRD
        )
        return

    # –î–∞—ë–º –æ—Ç–≤–µ—Ç –ø–æ –æ–∫–æ–Ω—á–∞–Ω–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞
    await update.reply_text(
        text=f'‚úÖ<b>–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.</b>\n\n'
             f"üíæ<b>–ó–∞–ø–∏—Å–∞–Ω–æ: {len(links.split(' '))} —Å—Å—ã–ª–æ–∫</b>\n\n"
             f'üí≤–¶–µ–Ω–∞ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞ –¥–ª—è 1 —Å—Å—ã–ª–∫–∏: <b>{links_obj.tariff} —Ä—É–±.</b>\n'
             f'üí∞–ë–∞–ª–∞–Ω—Å: <b>{links_obj.balance} —Ä—É–±.</b>\n'
             f'üßæ–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: <b>{links_obj.total_price} —Ä—É–±.</b>\n\n'
             f'üîÄ–í—ã–±–µ—Ä–∏—Ç–µ <b>—Å–∫–æ–ª—å–∫–æ</b> –¥–µ–ª–∞—Ç—å <b>—Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤</b> –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Å—ã–ª–∫–∏?',
        reply_markup=await choose_numb_of_redirect_kbrd()
    )


@Client.on_callback_query(filter_minus_redirect_handler)
async def minus_redirect_handler(client, update: CallbackQuery):
    """
    –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∫–Ω–æ–ø–æ–∫ '–º–∏–Ω—É—Å —Ä–µ–¥–∏—Ä–µ–∫—Ç(—ã)'
    """
    links_obj = LINKS_OBJ_DCT[update.from_user.id]  # –î–æ—Å—Ç–∞—ë–º –∏–∑ —Å–ª–æ–≤–∞—Ä—è –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞
    # –£–º–µ–Ω—å—à—è–µ–º –∫–æ–ª-–≤–æ —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤
    links_obj.redirect_numb -= float(update.data.split()[1])

    if links_obj.redirect_numb < 1:  # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–æ –º–µ–Ω–µ–µ 1 —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞
        links_obj.redirect_numb = 1
        # –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å (—á–∏—Å–ª–æ_—Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤ * —á–∏—Å–ª–æ_—Å—Å—ã–ª–æ–∫ * —Ç–∞—Ä–∏—Ñ)
        links_obj.total_price = links_obj.redirect_numb * len(links_obj.links.split(' ')) * links_obj.tariff
        text_for_message = f'‚ùóÔ∏è<b>–†–µ–¥–∏—Ä–µ–∫—Ç–æ–≤ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 1</b>\n' \
                           f'‚òëÔ∏è<b>–í—ã–±—Ä–∞–Ω–æ {int(links_obj.redirect_numb)} ' \
                           f'—Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Å—ã–ª–∫–∏</b>\n\n' \
                           f"üíæ–ó–∞–ø–∏—Å–∞–Ω–æ: <b>{len(links_obj.links.split(' '))}</b> —Å—Å—ã–ª–æ–∫\n\n" \
                           f'üí≤–¶–µ–Ω–∞ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞ –¥–ª—è 1 —Å—Å—ã–ª–∫–∏: <b>{links_obj.tariff} —Ä—É–±.</b>\n' \
                           f'üí∞–ë–∞–ª–∞–Ω—Å: <b>{links_obj.balance} —Ä—É–±.</b>\n' \
                           f'üßæ–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: <b>{links_obj.total_price} —Ä—É–±.</b>\n\n' \
                           f'üîÄ–í—ã–±–µ—Ä–∏—Ç–µ <b>—Å–∫–æ–ª—å–∫–æ</b> –¥–µ–ª–∞—Ç—å <b>—Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤</b> –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Å—ã–ª–∫–∏?'
        inline_kbrd = await choose_numb_of_redirect_kbrd(
            redirect_numb=str(links_obj.redirect_numb),
            replenish_balance=False
        )
    else:
        # –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å (—á–∏—Å–ª–æ_—Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤ * —á–∏—Å–ª–æ_—Å—Å—ã–ª–æ–∫ * —Ç–∞—Ä–∏—Ñ)
        links_obj.total_price = links_obj.redirect_numb * len(links_obj.links.split(' ')) * links_obj.tariff
        text_for_message = f'‚òëÔ∏è<b>–í—ã–±—Ä–∞–Ω–æ {int(links_obj.redirect_numb)} ' \
                           f'—Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Å—ã–ª–∫–∏</b>\n\n' \
                           f"üíæ<b>–ó–∞–ø–∏—Å–∞–Ω–æ: {len(links_obj.links.split(' '))} —Å—Å—ã–ª–æ–∫</b>\n\n" \
                           f'üí≤–¶–µ–Ω–∞ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞ –¥–ª—è 1 —Å—Å—ã–ª–∫–∏: {links_obj.tariff} —Ä—É–±.\n' \
                           f'üí∞–ë–∞–ª–∞–Ω—Å: {links_obj.balance} —Ä—É–±.\n' \
                           f'üßæ–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {links_obj.total_price} —Ä—É–±.\n\n' \
                           f'üîÄ–í—ã–±–µ—Ä–∏—Ç–µ <b>—Å–∫–æ–ª—å–∫–æ</b> –¥–µ–ª–∞—Ç—å <b>—Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤</b> –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Å—ã–ª–∫–∏?'
        inline_kbrd = await choose_numb_of_redirect_kbrd(
            redirect_numb=str(int(links_obj.redirect_numb)),
            replenish_balance=False
        )
    await update.edit_message_text(
        text=text_for_message,
        reply_markup=inline_kbrd
    )


@Client.on_callback_query(filter_plus_redirect_handler)
async def plus_redirect_handler(client, update: CallbackQuery):
    """
    –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∫–Ω–æ–ø–æ–∫ '–ø–ª—é—Å —Ä–µ–¥–∏—Ä–µ–∫—Ç(—ã)'.
    """
    links_obj = LINKS_OBJ_DCT[update.from_user.id]  # –î–æ—Å—Ç–∞—ë–º –∏–∑ —Å–ª–æ–≤–∞—Ä—è –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞
    # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª-–≤–æ —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤
    links_obj.redirect_numb += float(update.data.split()[1])
    # –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å (—á–∏—Å–ª–æ_—Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤ * —á–∏—Å–ª–æ_—Å—Å—ã–ª–æ–∫ * —Ç–∞—Ä–∏—Ñ)
    links_obj.total_price = links_obj.redirect_numb * len(links_obj.links.split(' ')) * links_obj.tariff

    if float(links_obj.total_price) > float(links_obj.balance):  # –ï—Å–ª–∏ –æ–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –±–æ–ª—å—à–µ –±–∞–ª–∞–Ω—Å–∞
        # –†–∞–∑–Ω–∏—Ü–∞ –∏—Ç–æ–≥–æ–≤–æ–π —Ü–µ–Ω—ã –∏ –±–∞–ª–∞–Ω—Å–∞
        price_difference = links_obj.total_price - links_obj.balance
        # —á–∏—Å–ª–æ_—Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤ = —Ä–∞–∑–Ω–∏—Ü–∞ —Ü–µ–Ω—ã / (—á–∏—Å–ª–æ_—Å—ã–ª–æ–∫ * —Ç–∞—Ä–∏—Ñ)
        numb_of_redirects = math.ceil(price_difference / (len(links_obj.links.split(' ')) * links_obj.tariff))

        # –û—Ç–Ω–∏–º–∞–µ–º –∫–æ–ª-–≤–æ —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤, —á—Ç–æ–±—ã –±—ã–ª–æ –Ω–µ –±–æ–ª—å—à–µ —Ç–µ–∫—É—â–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞
        links_obj.redirect_numb -= numb_of_redirects
        # –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å (—á–∏—Å–ª–æ_—Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤ * —á–∏—Å–ª–æ_—Å—Å—ã–ª–æ–∫ * —Ç–∞—Ä–∏—Ñ)
        links_obj.total_price = links_obj.redirect_numb * len(links_obj.links.split(' ')) * links_obj.tariff
        text_for_message = f'‚ùóÔ∏è<b>–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤, –ø–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –Ω–∞ {price_difference} —Ä—É–±.</b>\n\n' \
                           f'‚òëÔ∏è<b>–í—ã–±—Ä–∞–Ω–æ {int(links_obj.redirect_numb)} ' \
                           f'—Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Å—ã–ª–∫–∏</b>\n\n' \
                           f"üíæ–ó–∞–ø–∏—Å–∞–Ω–æ: <b>{len(links_obj.links.split(' '))} —Å—Å—ã–ª–æ–∫</b>\n\n" \
                           f'üí≤–¶–µ–Ω–∞ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞ –¥–ª—è 1 —Å—Å—ã–ª–∫–∏: <b>{links_obj.tariff} —Ä—É–±.</b>\n' \
                           f'üí∞–ë–∞–ª–∞–Ω—Å: <b>{links_obj.balance} —Ä—É–±.</b>\n' \
                           f'üßæ–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: <b>{links_obj.total_price} —Ä—É–±.</b>\n\n' \
                           f'üîÄ–í—ã–±–µ—Ä–∏—Ç–µ <b>—Å–∫–æ–ª—å–∫–æ</b> –¥–µ–ª–∞—Ç—å <b>—Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤</b> –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Å—ã–ª–∫–∏?'
        inline_kbrd = await choose_numb_of_redirect_kbrd(
            redirect_numb=str(int(links_obj.redirect_numb)),
            replenish_balance=True
        )
    else:
        # –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å (—á–∏—Å–ª–æ_—Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤ * —á–∏—Å–ª–æ_—Å—Å—ã–ª–æ–∫ * —Ç–∞—Ä–∏—Ñ)
        links_obj.total_price = links_obj.redirect_numb * len(links_obj.links.split(' ')) * links_obj.tariff
        text_for_message = f'‚òëÔ∏è<b>–í—ã–±—Ä–∞–Ω–æ {int(links_obj.redirect_numb)} ' \
                           f'—Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Å—ã–ª–∫–∏</b>\n\n' \
                           f"üíæ<b>–ó–∞–ø–∏—Å–∞–Ω–æ: {len(links_obj.links.split(' '))} —Å—Å—ã–ª–æ–∫</b>\n\n" \
                           f'üí≤–¶–µ–Ω–∞ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞ –¥–ª—è 1 —Å—Å—ã–ª–∫–∏: {links_obj.tariff} —Ä—É–±.\n' \
                           f'üí∞–ë–∞–ª–∞–Ω—Å: {links_obj.balance} —Ä—É–±.\n' \
                           f'üßæ–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {links_obj.total_price} —Ä—É–±.\n\n' \
                           f'üîÄ–í—ã–±–µ—Ä–∏—Ç–µ <b>—Å–∫–æ–ª—å–∫–æ</b> –¥–µ–ª–∞—Ç—å <b>—Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤</b> –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Å—ã–ª–∫–∏?'
        inline_kbrd = await choose_numb_of_redirect_kbrd(
            redirect_numb=str(int(links_obj.redirect_numb)),
            replenish_balance=False
        )
    await update.edit_message_text(
        text=text_for_message,
        reply_markup=inline_kbrd
    )


@Client.on_callback_query(filter_link_shortening_handler)
async def choosing_link_shortening_service_handler(client, update: CallbackQuery):
    """
    –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–µ—Ä–≤–∏—Å–∞ –ø–æ —Å–æ–∫—Ä–∞—â–µ–Ω–∏—é —Å—Å—ã–ª–æ–∫.
    –ü–æ–ø–∞–¥–∞–µ–º —Å—é–¥–∞ –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ —Å callback_data='to_link_shortening'.
    –û—Ç–¥–∞—ë–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å–ø–∏—Å–∫–æ–º —Å–µ—Ä–≤–∏—Å–æ–≤ –¥–ª—è —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è —Å—Å—ã–ª–æ–∫.
    """
    # await update.answer(f'‚ùóÔ∏è–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ: –≤ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è —Å–µ—Ä–≤–∏—Å cutt.us –¥–æ–ª–≥–æ –ø—Ä–æ–≥—Ä—É–∂–∞–µ—Ç —Å—Å—ã–ª–∫–∏.\n'
    #                     f'‚ÄºÔ∏è–ü–æ—ç—Ç–æ–º—É –ø—Ä–æ—Å–∏–º —É—á–∏—Ç—ã–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–π —Ñ–∞–∫—Ç –ø—Ä–∏ –µ–≥–æ –≤—ã–±–æ—Ä–µ.', show_alert=True)
    await update.answer(f'üîó–í—ã–±–æ—Ä —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è —Å—Å—ã–ª–æ–∫')
    await update.edit_message_text(
        text=f'üîó–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ <b>—Å–µ—Ä–≤–∏—Å –¥–ª—è —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è —Å—Å—ã–ª–æ–∫</b>.\n\n'
             f'–ë—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã! –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Å–æ–∫—Ä–∞—â–∞–ª–∫–∏ –æ—Ç–∫—Ä—ã–≤–∞—é—Ç —Å—Å—ã–ª–∫—É —Å–ø—É—Å—Ç—è n-oe –∫–æ–ª-–≤–æ –≤—Ä–µ–º–µ–Ω–∏!\n\n'
             f'haa.su - –ø–µ—Ä–µ—Ö–æ–¥ –≤ —Ç–µ—á. 3 —Å–µ–∫.',
        reply_markup=CHOOSE_SHORT_LINK_KBRD
    )


@Client.on_callback_query(filter_processing_links_handler)
async def processing_links_for_redirect_handler(client, update: CallbackQuery):
    """
    –•—ç–Ω–¥–ª–µ—Ä, –≤ –∫–æ—Ç–æ—Ä–æ–º –º—ã –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ–º –ø—Ä–æ—Ü–µ—Å—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–∞–∂–¥–æ–π —Å—Å—ã–ª–∫–∏ –¥–ª—è –æ–±—ë—Ä—Ç–∫–∏ –∏—Ö –≤ —Ä–µ–¥–∏—Ä–µ–∫—Ç.
    –ö–∞–∫ –∏—Ç–æ–≥ —Ä–∞–±–æ—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥—É—Ç —É–∫–∞–∑–∞–Ω—ã —Å—Å—ã–ª–∫–∏ —Å –∏—Ö —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–º –∏ ID –∫–æ–º–ø–∞–Ω–∏–∏(–¥–ª—è —Å–±–æ—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏)
    """
    links_obj = LINKS_OBJ_DCT[update.from_user.id]  # –î–æ—Å—Ç–∞—ë–º –∏–∑ —Å–ª–æ–≤–∞—Ä—è –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞
    links_obj.short_link_service = update.data.split()[1]
    await update.edit_message_text(
        text=f'üÜó–û–∫–µ–π.\n'
             f'üéÅ–ù–∞—á–∏–Ω–∞—é –æ–±–æ—Ä–∞—á–∏–≤–∞—Ç—å –í–∞—à–∏ —Å—Å—ã–ª–∫–∏ –≤ —Ä–µ–¥–∏—Ä–µ–∫—Ç.\n'
             f'üßò‚Äç‚ôÄÔ∏è–û–∂–∏–¥–∞–π—Ç–µ, —è –ø—Ä–∏—à–ª—é –í–∞–º —Ñ–∞–π–ª —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏üìÑ, –∫–æ–≥–¥–∞ –≤—Å—ë –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–æ.',
        reply_markup=BACK_TO_HEAD_PAGE_KBRD
    )
    err_flag = False
    # –°–æ–∑–¥–∞—ë–º –≤ –ë–î –Ω–∞–±–æ—Ä –¥–ª—è —Å—Å—ã–ª–æ–∫
    result = await links_obj.create_link_set()
    if result:
        # –°–æ–∑–¥–∞—ë–º –≤ –ë–î –∑–∞–ø–∏—Å–∏ –¥–ª—è —Å—Å—ã–ª–æ–∫
        result = await links_obj.create_links()
        if not result:  # –ù–µ—É–¥–∞—á–Ω—ã–π –∑–∞–ø—Ä–æ—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Å—ã–ª–æ–∫
            logger.error(f'–ù–µ—É–¥–∞—á–Ω—ã–π –∑–∞–ø—Ä–æ—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤ –ë–î —Å—Å—ã–ª–æ–∫. TG_ID=={update.from_user.id}')
            err_flag = True
    else:   # –ù–µ—É–¥–∞—á–Ω—ã–π –∑–∞–ø—Ä–æ—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞–±–æ—Ä–∞ —Å—Å—ã–ª–æ–∫
        logger.error(f'–ù–µ—É–¥–∞—á–Ω—ã–π –∑–∞–ø—Ä–æ—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤ –ë–î –Ω–∞–±–æ—Ä–∞ —Å—Å—ã–ª–æ–∫. TG_ID=={update.from_user.id}')
        err_flag = True

    # –ö–∏–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å –¥–ª—è —Å—Ç–∞—Ä—Ç–∞ –æ–±—ë—Ä—Ç–∫–∏ —Å—Å—ã–ª–æ–∫(–∑–∞–¥–∞—á–∫–∞ Celery)
    if not await links_obj.start_wrapping():
        logger.error(f'–ù–µ—É–¥–∞—á–Ω—ã–π –∑–∞–ø—Ä–æ—Å —Å—Ç–∞—Ä—Ç–∞ –∑–∞–¥–∞—á–∏ –ø–æ –æ–±—ë—Ä—Ç–∫–∏ —Å—Å—ã–ª–æ–∫. TG_ID=={update.from_user.id}')
        err_flag = True

    if err_flag:    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞
        await update.edit_message_text(
            text=f'üîß<b>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç—å –±–æ—Ç–∞.</b>\n'
                 f'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–æ–±—â–∏—Ç–µ –Ω–∞–º —á–µ—Ä–µ–∑ —Ä–∞–∑–¥–µ–ª –ø–æ–¥–¥–µ—Ä–∂–∫–∏, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ —É—Å—Ç—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.',
            reply_markup=BACK_TO_HEAD_PAGE_KBRD
        )


@Client.on_message(filter_for_waiting_file_processing_handler)
async def waiting_file_processing(client, update: Message):
    """
    –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π, –∫–æ–≥–¥–∞ —é–∑–µ—Ä –æ–∂–∏–¥–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞.
    –û—Ç–≤–µ—á–∞–µ–º, —á—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å –∏–¥—ë—Ç, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å.
    """
    # TODO: –Ω–∞ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—É –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É, —Å–∫–æ–ª—å–∫–æ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å—Ç—Ä–æ–∫ –≤ —Ñ–∞–π–ª–µ
    answers_lst = [
        '‚åõÔ∏è–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ. –Ø –∑–∞–Ω–∏–º–∞—é—Å—å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –í–∞—à–µ–≥–æ —Ñ–∞–π–ª–∞',
        '‚åõÔ∏è–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –í–∞–º –ø—Ä–∏–¥—ë—Ç—Å—è –µ—â—ë –Ω–µ–º–Ω–æ–≥–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å, —è –∑–∞–Ω–∏–º–∞—é—Å—å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –í–∞—à–µ–≥–æ —Ñ–∞–π–ª–∞.',
        'üçπ–ü–æ–∫–∞ —è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ñ–∞–π–ª, –í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –≤—Ä–µ–º—è —Å –ø–æ–ª—å–∑–æ–π –¥–ª—è —Å–µ–±—è.',
        'ü•É–ü–æ—á–µ–º—É –±—ã –Ω–µ —Å–¥–µ–ª–∞—Ç—å –Ω–µ–±–æ–ª—å—à—É—é –ø–∞—É–∑—É, –ø–æ–∫–∞ —è –∑–∞–Ω—è—Ç –æ–±—Ä–∞–±–æ—Ç–∫–æ–π —Ñ–∞–π–ª–∞?',
        'üßâ–í—ã –º–æ–∂–µ—Ç–µ —Ä–∞—Å—Å–ª–∞–±–∏—Ç—å—Å—è, –ø–æ–∫–∞ —è –∑–∞–Ω—è—Ç –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –í–∞—à–µ–≥–æ —Ñ–∞–π–ª–∞. '
        '–°–æ–≥–ª–∞—Å–∏—Ç–µ—Å—å, –Ω–∞–º–Ω–æ–≥–æ –ª—É—á—à–µ –∫–æ–≥–¥–∞ –í–∞–º –Ω–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç—Å—è –¥–µ–ª–∞—Ç—å —ç—Ç–æ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ.',
    ]
    await update.reply_text(
        text=f"{random.choice(answers_lst)}\n\n"
             f"üìñ<b>–ü—Ä–æ—á–∏—Ç–∞–Ω–æ: {STATES_STORAGE_DCT[update.from_user.id][1]} —Å—Ç—Ä–æ–∫ —Ñ–∞–π–ª–∞</b>\n"
             f"üíæ<b>–ó–∞–ø–∏—Å–∞–Ω–æ: {STATES_STORAGE_DCT[update.from_user.id][2]} —Å—Å—ã–ª–æ–∫</b>"
    )
